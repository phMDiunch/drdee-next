// src/features/payment/constants.ts

export const PAYMENT_METHODS = [
  { label: "Ti·ªÅn m·∫∑t", value: "Ti·ªÅn m·∫∑t", color: "green", icon: "üíµ" },
  {
    label: "Qu·∫πt th·∫ª th∆∞·ªùng",
    value: "Qu·∫πt th·∫ª th∆∞·ªùng",
    color: "blue",
    icon: "üí≥",
  },
  {
    label: "Qu·∫πt th·∫ª Visa",
    value: "Qu·∫πt th·∫ª Visa",
    color: "purple",
    icon: "üíé",
  },
  { label: "Chuy·ªÉn kho·∫£n", value: "Chuy·ªÉn kho·∫£n", color: "orange", icon: "üè¶" },
] as const;

export const PAYMENT_STATUS = [
  { label: "ƒê√£ thanh to√°n", value: "paid", color: "green" },
  { label: "Ch∆∞a thanh to√°n", value: "unpaid", color: "red" },
  { label: "Thanh to√°n m·ªôt ph·∫ßn", value: "partial", color: "orange" },
] as const;

// Helper functions
export const getPaymentMethodConfig = (method: string) => {
  return (
    PAYMENT_METHODS.find((pm) => pm.value === method) || PAYMENT_METHODS[0]
  );
};

export const categorizePaymentMethods = (
  details: Array<{ amount: number; paymentMethod: string }>
) => {
  const summary = {
    cash: 0, // Ti·ªÅn m·∫∑t
    cardNormal: 0, // Qu·∫πt th·∫ª th∆∞·ªùng
    cardVisa: 0, // Qu·∫πt th·∫ª Visa
    transfer: 0, // Chuy·ªÉn kho·∫£n
  };

  details.forEach((detail) => {
    const amount = detail.amount || 0;
    switch (detail.paymentMethod) {
      case "Ti·ªÅn m·∫∑t":
        summary.cash += amount;
        break;
      case "Qu·∫πt th·∫ª th∆∞·ªùng":
        summary.cardNormal += amount;
        break;
      case "Qu·∫πt th·∫ª Visa":
        summary.cardVisa += amount;
        break;
      case "Chuy·ªÉn kho·∫£n":
        summary.transfer += amount;
        break;
      default:
        summary.cash += amount; // Default to cash
    }
  });

  return summary;
};
